<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-jpa="http://www.springframework.org/schema/integration/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/integration         http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans               http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/file    http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/integration/jpa     http://www.springframework.org/schema/integration/jpa/spring-integration-jpa.xsd
		http://www.springframework.org/schema/context             http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx				  http://www.springframework.org/schema/tx/spring-tx.xsd		
		">

	<context:component-scan base-package="gov.usgs.cida.ncetl" />
	<context:property-placeholder/>
	<context:annotation-config/>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- <bean id="em" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
      <property name="persistenceUnitName" value="ncETL"/>
      <property name=""
    </bean> -->
    
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
  		<property name="dataSource" ref="dataSource"/>
  		<property name="jpaVendorAdapter">
        	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            	<property name="showSql" value="true"/>
            	<property name="generateDdl" value="false"/>
            	<property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
        	</bean>
    	</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
   		<property name="entityManagerFactory" ref="emf" />
	</bean>
	
	<bean id="persistenceExceptionTranslationPostProcessor"
      class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
	<import resource="jdbc-context.xml"/>
	
	<!-- Liquibase to upgrade the database; runs automatically on context init -->
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
     	<property name="dataSource" ref="dataSource" />
     	<property name="changeLog" value="liquibase/changelog.xml" />
 	</bean>
 	
 	<bean id="oneshot" class="gov.usgs.cida.ncetl.sis.LatchTrigger">
      <property name="go" value="true"/>
    </bean>
 	
	<int-jpa:inbound-channel-adapter id="config-fetcher" channel="config-list-chan"
		entity-manager-factory="emf"
		jpa-query="select s from ArchiveConfig s  "
		expect-single-result="false"
		delete-after-poll="false"
		auto-startup="false"
		>
			<int:poller trigger="oneshot"/>
	</int-jpa:inbound-channel-adapter>
	
	<int:channel id="config-list-chan">
		<!-- List<ArchiveConfig> -->
	</int:channel>
	
	<int:splitter input-channel="config-list-chan" output-channel="work-chan"/>
	
	<int:channel id="work-chan" datatype="gov.usgs.cida.ncetl.jpa.ArchiveConfig"/>
	
	<bean id="file-fetcher" class="gov.usgs.cida.ncetl.sis.FileFetcher"/>
	
	<!-- Uses ArchiveConfig to fetch list of files. ArchiveConfig is copied to header 'config' -->
	<int:transformer input-channel="work-chan" output-channel="lof-chan"
		ref="file-fetcher"
	/>
	
	<int:channel id="lof-chan"/>
	
	<!-- splits list of files to one message per file, with headers year month rfc outputFile -->
	<!--  also sets aggregation headers, so must set apply-sequence=false to prevent override -->
	<int:splitter id="lof-splitter" input-channel="lof-chan" output-channel="motherlode-chan"
		ref="file-fetcher"
		apply-sequence="false"
	/>
	
	<int:channel id="motherlode-chan" datatype="java.io.File"/>
		
	<bean id="message-store" class="org.springframework.integration.store.SimpleMessageStore"/>
	<bean id="reaper" class="org.springframework.integration.store.MessageGroupStoreReaper">
		<property name="messageGroupStore" ref="message-store"/>
		<property name="expireOnDestroy" value="true"/>
	</bean>
		
	<!--  assembles input files into list<file> according to aggregation headers -->
	<int:aggregator id="grib-agg" input-channel="motherlode-chan" output-channel="grib-chan" 
		expire-groups-upon-completion="true"
		send-partial-result-on-expiry="true"
		
		message-store="message-store"
	/>
	
	<int:channel id="grib-chan"/>
	
	<bean id="gribber" class="gov.usgs.cida.data.grib.NetCDFArchiver"/>
	
	<!-- The workhorse that actually processes the data. -->
	<int:transformer id="grib-writer" input-channel="grib-chan" output-channel="ok-chan"
		ref="gribber" method="processFiles"
	/>
	
	<int:channel id="ok-chan"/>
	
	<!-- Transformer because the addHistory method returns a non-null value.  -->
	<int:transformer input-channel="ok-chan"  output-channel="gather-chan"
		expression="headers.config.addHistory('ok for ' + headers.config.name)"
	/>
	
	<int:channel id="errorChannel"/>
	
	<!-- Can't rely on header config being set on error channel -->
	<int:bridge input-channel="errorChannel" output-channel="gather-chan">
	</int:bridge>
		
	<int:channel id="gather-chan"/>
	
	<int:aggregator id="gather-agg" input-channel="gather-chan" output-channel="finis"/>
	
	<int:channel id="finis">
		<int:queue/>
	</int:channel>
</beans>
